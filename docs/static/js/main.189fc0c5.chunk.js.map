{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGifs.js","components/GifGrid.jsx","hooks/useFetchGifts.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGift","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMA0BeA,EAvBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAY1C,OACC,sBAAMC,SATc,SAAAC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKf,SACC,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAXnB,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,a,QCGnCG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACjC,OACC,sBAAKC,UAAU,6CAAf,UACC,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCJMK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACN,mCACVN,EAFgB,iDAEgCO,UAAUF,GAF1C,6BACN,oCADM,SAGEG,MAAMR,GAHR,cAGhBS,EAHgB,gBAICA,EAAUC,OAJX,uBAIdC,EAJc,EAIdA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACNhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVd,kBAcfY,GAde,4CAAH,sDCqBLK,EAhBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFN,SAAAA,GAAa,IAAD,EACbrB,mBAAS,CAClC2B,KAAM,GACNO,SAAS,IAH6B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACTjB,EAAQC,GAAUiB,MAAK,SAAAC,GACtBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGT,CAACb,IAEGc,EDZ2BK,CAAanB,GAAjCU,EADmB,EACzBJ,KAAcO,EADW,EACXA,QAEtB,OACC,qCACC,oBAAIjB,UAAU,wCAAd,SAAuDI,IACtDa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACEc,EAAOF,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEaZ2B,EAvBM,WAAO,IAAD,EACUzC,mBAAS,CAAC,cADpB,mBACnBQ,EADmB,KACPT,EADO,KAQ1B,OACC,qCACC,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACES,EAAWqB,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCfvCqB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.189fc0c5.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleChange = e => setInputValue(e.target.value);\r\n\tconst handleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories(categories => [inputValue, ...categories]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input type='text' value={inputValue} onChange={handleChange} />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const GifGridItem = ({ id, title, url }) => {\r\n\treturn (\r\n\t\t<div className='card animate__animated animate__fadeInDown'>\r\n\t\t\t<img src={url} alt={title} />\r\n\t\t\t<p>{title}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async category => {\r\n\tconst api_key = 'wL012ES9RhgxaadVjTPRWsgylegZMVdm';\r\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`;\r\n\tconst respuesta = await fetch(url);\r\n\tconst { data } = await respuesta.json();\r\n\r\n\tconst gifs = data.map(img => {\r\n\t\treturn {\r\n\t\t\tid: img.id,\r\n\t\t\ttitle: img.title,\r\n\t\t\turl: img.images?.downsized_medium.url,\r\n\t\t};\r\n\t});\r\n\r\n\treturn gifs;\r\n};\r\n","// import { useState, useEffect } from 'react';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nimport { useFetchGift } from '../hooks/useFetchGifts';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\tconst { data: images, loading } = useFetchGift(category);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className='animate__animated animate__fadeInDown'>{category}</h3>\r\n\t\t\t{loading && <p className='animate__animated animate__flash'>Loading...</p>}\r\n\t\t\t<div className='card-grid'>\r\n\t\t\t\t{images.map(img => (\r\n\t\t\t\t\t<GifGridItem key={img.id} {...img} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGift = category => {\r\n\tconst [state, setState] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true,\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGifs(category).then(imgs => {\r\n\t\t\tsetState({\r\n\t\t\t\tdata: imgs,\r\n\t\t\t\tloading: false,\r\n\t\t\t});\r\n\t\t});\r\n\t}, [category]);\r\n\r\n\treturn state;\r\n};\r\n","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\tconst [categories, setCategories] = useState(['One punch']);\r\n\r\n\t// const handleAdd = () => {\r\n\t// \tsetCategories([...categories, 'Full Metal Alchemist']);\r\n\t// \t//setCategories(cats => [...cats, 'Full Metal Alchemist']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2> GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories={setCategories} />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{categories.map(category => (\r\n\t\t\t\t\t<GifGrid category={category} key={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}